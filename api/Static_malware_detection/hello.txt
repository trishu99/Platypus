
Static_malware_detection/elf/binarysearch:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	ins    BYTE PTR es:[rdi],dx
  40023a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
  400241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  400246:	78 2d                	js     400275 <_init-0x2b3>
  400248:	78 38                	js     400282 <_init-0x2a6>
  40024a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
  400250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    al,0x0
  400256:	00 00                	add    BYTE PTR [rax],al
  400258:	10 00                	adc    BYTE PTR [rax],al
  40025a:	00 00                	add    BYTE PTR [rax],al
  40025c:	01 00                	add    DWORD PTR [rax],eax
  40025e:	00 00                	add    BYTE PTR [rax],al
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push rbp
  400263:	00 00                	add    BYTE PTR [rax],al
  400265:	00 00                	add    BYTE PTR [rax],al
  400267:	00 02                	add    BYTE PTR [rdx],al
  400269:	00 00                	add    BYTE PTR [rax],al
  40026b:	00 06                	add    BYTE PTR [rsi],al
  40026d:	00 00                	add    BYTE PTR [rax],al
  40026f:	00 20                	add    BYTE PTR [rax],ah
  400271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    al,0x0
  400276:	00 00                	add    BYTE PTR [rax],al
  400278:	14 00                	adc    al,0x0
  40027a:	00 00                	add    BYTE PTR [rax],al
  40027c:	03 00                	add    eax,DWORD PTR [rax]
  40027e:	00 00                	add    BYTE PTR [rax],al
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push rbp
  400283:	00 06                	add    BYTE PTR [rsi],al
  400285:	d8 71 ce             	fdiv   DWORD PTR [rcx-0x32]
  400288:	81 b5 a1 24 74 83 41 	xor    DWORD PTR [rbp-0x7c8bdb5f],0x86386041
  40028f:	60 38 86 
  400292:	2f                   	(bad)  
  400293:	2b 55 64             	sub    edx,DWORD PTR [rbp+0x64]
  400296:	4d                   	rex.WRB
  400297:	c6                   	.byte 0xc6

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    DWORD PTR [rax],eax
  40029a:	00 00                	add    BYTE PTR [rax],al
  40029c:	01 00                	add    DWORD PTR [rax],eax
  40029e:	00 00                	add    BYTE PTR [rax],al
  4002a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	30 00                	xor    BYTE PTR [rax],al
  4002d2:	00 00                	add    BYTE PTR [rax],al
  4002d4:	12 00                	adc    al,BYTE PTR [rax]
	...
  4002e6:	00 00                	add    BYTE PTR [rax],al
  4002e8:	1a 00                	sbb    al,BYTE PTR [rax]
  4002ea:	00 00                	add    BYTE PTR [rax],al
  4002ec:	12 00                	adc    al,BYTE PTR [rax]
	...
  4002fe:	00 00                	add    BYTE PTR [rax],al
  400300:	3f                   	(bad)  
  400301:	00 00                	add    BYTE PTR [rax],al
  400303:	00 12                	add    BYTE PTR [rdx],dl
	...
  400315:	00 00                	add    BYTE PTR [rax],al
  400317:	00 1f                	add    BYTE PTR [rdi],bl
  400319:	00 00                	add    BYTE PTR [rax],al
  40031b:	00 12                	add    BYTE PTR [rdx],dl
	...
  40032d:	00 00                	add    BYTE PTR [rax],al
  40032f:	00 38                	add    BYTE PTR [rax],bh
  400331:	00 00                	add    BYTE PTR [rax],al
  400333:	00 12                	add    BYTE PTR [rdx],dl
	...
  400345:	00 00                	add    BYTE PTR [rax],al
  400347:	00 45 00             	add    BYTE PTR [rbp+0x0],al
  40034a:	00 00                	add    BYTE PTR [rax],al
  40034c:	12 00                	adc    al,BYTE PTR [rax]
	...
  40035e:	00 00                	add    BYTE PTR [rax],al
  400360:	57                   	push   rdi
  400361:	00 00                	add    BYTE PTR [rax],al
  400363:	00 20                	add    BYTE PTR [rax],ah
	...
  400375:	00 00                	add    BYTE PTR [rax],al
  400377:	00 0b                	add    BYTE PTR [rbx],cl
  400379:	00 00                	add    BYTE PTR [rax],al
  40037b:	00 12                	add    BYTE PTR [rdx],dl
	...

Disassembly of section .dynstr:

0000000000400390 <.dynstr>:
  400390:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
  400394:	63 2e                	movsxd ebp,DWORD PTR [rsi]
  400396:	73 6f                	jae    400407 <_init-0x121>
  400398:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[rdi+0x5f],bl
  40039d:	69 73 6f 63 39 39 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f393963
  4003a4:	73 63                	jae    400409 <_init-0x11f>
  4003a6:	61                   	(bad)  
  4003a7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4003a8:	66 00 70 75          	data16 add BYTE PTR [rax+0x75],dh
  4003ac:	74 73                	je     400421 <_init-0x107>
  4003ae:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
  4003b1:	73 74                	jae    400427 <_init-0x101>
  4003b3:	61                   	(bad)  
  4003b4:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  4003b7:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
  4003ba:	5f                   	pop    rdi
  4003bb:	66 61                	data16 (bad) 
  4003bd:	69 6c 00 70 75 74 63 	imul   ebp,DWORD PTR [rax+rax*1+0x70],0x68637475
  4003c4:	68 
  4003c5:	61                   	(bad)  
  4003c6:	72 00                	jb     4003c8 <_init-0x160>
  4003c8:	70 72                	jo     40043c <_init-0xec>
  4003ca:	69 6e 74 66 00 71 73 	imul   ebp,DWORD PTR [rsi+0x74],0x73710066
  4003d1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4003d2:	72 74                	jb     400448 <_init-0xe0>
  4003d4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
  4003d7:	6c                   	ins    BYTE PTR es:[rdi],dx
  4003d8:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
  4003df:	72 74                	jb     400455 <_init-0xd3>
  4003e1:	5f                   	pop    rdi
  4003e2:	6d                   	ins    DWORD PTR es:[rdi],dx
  4003e3:	61                   	(bad)  
  4003e4:	69 6e 00 5f 5f 67 6d 	imul   ebp,DWORD PTR [rsi+0x0],0x6d675f5f
  4003eb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4003ec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4003ed:	5f                   	pop    rdi
  4003ee:	73 74                	jae    400464 <_init-0xc4>
  4003f0:	61                   	(bad)  
  4003f1:	72 74                	jb     400467 <_init-0xc1>
  4003f3:	5f                   	pop    rdi
  4003f4:	5f                   	pop    rdi
  4003f5:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
  4003f8:	49                   	rex.WB
  4003f9:	42                   	rex.X
  4003fa:	43 5f                	rex.XB pop r15
  4003fc:	32 2e                	xor    ch,BYTE PTR [rsi]
  4003fe:	37                   	(bad)  
  4003ff:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
  400402:	49                   	rex.WB
  400403:	42                   	rex.X
  400404:	43 5f                	rex.XB pop r15
  400406:	32 2e                	xor    ch,BYTE PTR [rsi]
  400408:	34 00                	xor    al,0x0
  40040a:	47                   	rex.RXB
  40040b:	4c                   	rex.WR
  40040c:	49                   	rex.WB
  40040d:	42                   	rex.X
  40040e:	43 5f                	rex.XB pop r15
  400410:	32 2e                	xor    ch,BYTE PTR [rsi]
  400412:	32 2e                	xor    ch,BYTE PTR [rsi]
  400414:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400416 <.gnu.version>:
  400416:	00 00                	add    BYTE PTR [rax],al
  400418:	02 00                	add    al,BYTE PTR [rax]
  40041a:	02 00                	add    al,BYTE PTR [rax]
  40041c:	02 00                	add    al,BYTE PTR [rax]
  40041e:	03 00                	add    eax,DWORD PTR [rax]
  400420:	02 00                	add    al,BYTE PTR [rax]
  400422:	02 00                	add    al,BYTE PTR [rax]
  400424:	00 00                	add    BYTE PTR [rax],al
  400426:	04 00                	add    al,0x0

Disassembly of section .gnu.version_r:

0000000000400428 <.gnu.version_r>:
  400428:	01 00                	add    DWORD PTR [rax],eax
  40042a:	03 00                	add    eax,DWORD PTR [rax]
  40042c:	01 00                	add    DWORD PTR [rax],eax
  40042e:	00 00                	add    BYTE PTR [rax],al
  400430:	10 00                	adc    BYTE PTR [rax],al
  400432:	00 00                	add    BYTE PTR [rax],al
  400434:	00 00                	add    BYTE PTR [rax],al
  400436:	00 00                	add    BYTE PTR [rax],al
  400438:	17                   	(bad)  
  400439:	69 69 0d 00 00 04 00 	imul   ebp,DWORD PTR [rcx+0xd],0x40000
  400440:	66 00 00             	data16 add BYTE PTR [rax],al
  400443:	00 10                	add    BYTE PTR [rax],dl
  400445:	00 00                	add    BYTE PTR [rax],al
  400447:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
  40044a:	69 0d 00 00 03 00 70 	imul   ecx,DWORD PTR [rip+0x30000],0x70        # 430454 <__FRAME_END__+0x2f914>
  400451:	00 00 00 
  400454:	10 00                	adc    BYTE PTR [rax],al
  400456:	00 00                	add    BYTE PTR [rax],al
  400458:	75 1a                	jne    400474 <_init-0xb4>
  40045a:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
  400460:	7a 00                	jp     400462 <_init-0xc6>
  400462:	00 00                	add    BYTE PTR [rax],al
  400464:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000400468 <.rela.dyn>:
  400468:	f8                   	clc    
  400469:	0f 60 00             	punpcklbw mm0,DWORD PTR [rax]
  40046c:	00 00                	add    BYTE PTR [rax],al
  40046e:	00 00                	add    BYTE PTR [rax],al
  400470:	06                   	(bad)  
  400471:	00 00                	add    BYTE PTR [rax],al
  400473:	00 07                	add    BYTE PTR [rdi],al
	...

Disassembly of section .rela.plt:

0000000000400480 <.rela.plt>:
  400480:	18 10                	sbb    BYTE PTR [rax],dl
  400482:	60                   	(bad)  
  400483:	00 00                	add    BYTE PTR [rax],al
  400485:	00 00                	add    BYTE PTR [rax],al
  400487:	00 07                	add    BYTE PTR [rdi],al
  400489:	00 00                	add    BYTE PTR [rax],al
  40048b:	00 01                	add    BYTE PTR [rcx],al
	...
  400495:	00 00                	add    BYTE PTR [rax],al
  400497:	00 20                	add    BYTE PTR [rax],ah
  400499:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  40049c:	00 00                	add    BYTE PTR [rax],al
  40049e:	00 00                	add    BYTE PTR [rax],al
  4004a0:	07                   	(bad)  
  4004a1:	00 00                	add    BYTE PTR [rax],al
  4004a3:	00 02                	add    BYTE PTR [rdx],al
	...
  4004ad:	00 00                	add    BYTE PTR [rax],al
  4004af:	00 28                	add    BYTE PTR [rax],ch
  4004b1:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  4004b4:	00 00                	add    BYTE PTR [rax],al
  4004b6:	00 00                	add    BYTE PTR [rax],al
  4004b8:	07                   	(bad)  
  4004b9:	00 00                	add    BYTE PTR [rax],al
  4004bb:	00 03                	add    BYTE PTR [rbx],al
	...
  4004c5:	00 00                	add    BYTE PTR [rax],al
  4004c7:	00 30                	add    BYTE PTR [rax],dh
  4004c9:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  4004cc:	00 00                	add    BYTE PTR [rax],al
  4004ce:	00 00                	add    BYTE PTR [rax],al
  4004d0:	07                   	(bad)  
  4004d1:	00 00                	add    BYTE PTR [rax],al
  4004d3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
  4004de:	00 00                	add    BYTE PTR [rax],al
  4004e0:	38 10                	cmp    BYTE PTR [rax],dl
  4004e2:	60                   	(bad)  
  4004e3:	00 00                	add    BYTE PTR [rax],al
  4004e5:	00 00                	add    BYTE PTR [rax],al
  4004e7:	00 07                	add    BYTE PTR [rdi],al
  4004e9:	00 00                	add    BYTE PTR [rax],al
  4004eb:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4004f1 <_init-0x37>
  4004f1:	00 00                	add    BYTE PTR [rax],al
  4004f3:	00 00                	add    BYTE PTR [rax],al
  4004f5:	00 00                	add    BYTE PTR [rax],al
  4004f7:	00 40 10             	add    BYTE PTR [rax+0x10],al
  4004fa:	60                   	(bad)  
  4004fb:	00 00                	add    BYTE PTR [rax],al
  4004fd:	00 00                	add    BYTE PTR [rax],al
  4004ff:	00 07                	add    BYTE PTR [rdi],al
  400501:	00 00                	add    BYTE PTR [rax],al
  400503:	00 06                	add    BYTE PTR [rsi],al
	...
  40050d:	00 00                	add    BYTE PTR [rax],al
  40050f:	00 48 10             	add    BYTE PTR [rax+0x10],cl
  400512:	60                   	(bad)  
  400513:	00 00                	add    BYTE PTR [rax],al
  400515:	00 00                	add    BYTE PTR [rax],al
  400517:	00 07                	add    BYTE PTR [rdi],al
  400519:	00 00                	add    BYTE PTR [rax],al
  40051b:	00 08                	add    BYTE PTR [rax],cl
	...

Disassembly of section .init:

0000000000400528 <_init>:
  400528:	48 83 ec 08          	sub    rsp,0x8
  40052c:	48 8b 05 c5 0a 20 00 	mov    rax,QWORD PTR [rip+0x200ac5]        # 600ff8 <_DYNAMIC+0x1d0>
  400533:	48 85 c0             	test   rax,rax
  400536:	74 05                	je     40053d <_init+0x15>
  400538:	e8 93 00 00 00       	call   4005d0 <__isoc99_scanf@plt+0x10>
  40053d:	48 83 c4 08          	add    rsp,0x8
  400541:	c3                   	ret    

Disassembly of section .plt:

0000000000400550 <putchar@plt-0x10>:
  400550:	ff 35 b2 0a 20 00    	push   QWORD PTR [rip+0x200ab2]        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400556:	ff 25 b4 0a 20 00    	jmp    QWORD PTR [rip+0x200ab4]        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40055c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400560 <putchar@plt>:
  400560:	ff 25 b2 0a 20 00    	jmp    QWORD PTR [rip+0x200ab2]        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400566:	68 00 00 00 00       	push   0x0
  40056b:	e9 e0 ff ff ff       	jmp    400550 <_init+0x28>

0000000000400570 <puts@plt>:
  400570:	ff 25 aa 0a 20 00    	jmp    QWORD PTR [rip+0x200aaa]        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400576:	68 01 00 00 00       	push   0x1
  40057b:	e9 d0 ff ff ff       	jmp    400550 <_init+0x28>

0000000000400580 <qsort@plt>:
  400580:	ff 25 a2 0a 20 00    	jmp    QWORD PTR [rip+0x200aa2]        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400586:	68 02 00 00 00       	push   0x2
  40058b:	e9 c0 ff ff ff       	jmp    400550 <_init+0x28>

0000000000400590 <__stack_chk_fail@plt>:
  400590:	ff 25 9a 0a 20 00    	jmp    QWORD PTR [rip+0x200a9a]        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400596:	68 03 00 00 00       	push   0x3
  40059b:	e9 b0 ff ff ff       	jmp    400550 <_init+0x28>

00000000004005a0 <printf@plt>:
  4005a0:	ff 25 92 0a 20 00    	jmp    QWORD PTR [rip+0x200a92]        # 601038 <_GLOBAL_OFFSET_TABLE_+0x38>
  4005a6:	68 04 00 00 00       	push   0x4
  4005ab:	e9 a0 ff ff ff       	jmp    400550 <_init+0x28>

00000000004005b0 <__libc_start_main@plt>:
  4005b0:	ff 25 8a 0a 20 00    	jmp    QWORD PTR [rip+0x200a8a]        # 601040 <_GLOBAL_OFFSET_TABLE_+0x40>
  4005b6:	68 05 00 00 00       	push   0x5
  4005bb:	e9 90 ff ff ff       	jmp    400550 <_init+0x28>

00000000004005c0 <__isoc99_scanf@plt>:
  4005c0:	ff 25 82 0a 20 00    	jmp    QWORD PTR [rip+0x200a82]        # 601048 <_GLOBAL_OFFSET_TABLE_+0x48>
  4005c6:	68 06 00 00 00       	push   0x6
  4005cb:	e9 80 ff ff ff       	jmp    400550 <_init+0x28>

Disassembly of section .plt.got:

00000000004005d0 <.plt.got>:
  4005d0:	ff 25 22 0a 20 00    	jmp    QWORD PTR [rip+0x200a22]        # 600ff8 <_DYNAMIC+0x1d0>
  4005d6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000004005e0 <_start>:
  4005e0:	31 ed                	xor    ebp,ebp
  4005e2:	49 89 d1             	mov    r9,rdx
  4005e5:	5e                   	pop    rsi
  4005e6:	48 89 e2             	mov    rdx,rsp
  4005e9:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  4005ed:	50                   	push   rax
  4005ee:	54                   	push   rsp
  4005ef:	49 c7 c0 a0 09 40 00 	mov    r8,0x4009a0
  4005f6:	48 c7 c1 30 09 40 00 	mov    rcx,0x400930
  4005fd:	48 c7 c7 a0 07 40 00 	mov    rdi,0x4007a0
  400604:	e8 a7 ff ff ff       	call   4005b0 <__libc_start_main@plt>
  400609:	f4                   	hlt    
  40060a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400610 <deregister_tm_clones>:
  400610:	b8 67 10 60 00       	mov    eax,0x601067
  400615:	55                   	push   rbp
  400616:	48 2d 60 10 60 00    	sub    rax,0x601060
  40061c:	48 83 f8 0e          	cmp    rax,0xe
  400620:	48 89 e5             	mov    rbp,rsp
  400623:	76 1b                	jbe    400640 <deregister_tm_clones+0x30>
  400625:	b8 00 00 00 00       	mov    eax,0x0
  40062a:	48 85 c0             	test   rax,rax
  40062d:	74 11                	je     400640 <deregister_tm_clones+0x30>
  40062f:	5d                   	pop    rbp
  400630:	bf 60 10 60 00       	mov    edi,0x601060
  400635:	ff e0                	jmp    rax
  400637:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  40063e:	00 00 
  400640:	5d                   	pop    rbp
  400641:	c3                   	ret    
  400642:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  400646:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  40064d:	00 00 00 

0000000000400650 <register_tm_clones>:
  400650:	be 60 10 60 00       	mov    esi,0x601060
  400655:	55                   	push   rbp
  400656:	48 81 ee 60 10 60 00 	sub    rsi,0x601060
  40065d:	48 c1 fe 03          	sar    rsi,0x3
  400661:	48 89 e5             	mov    rbp,rsp
  400664:	48 89 f0             	mov    rax,rsi
  400667:	48 c1 e8 3f          	shr    rax,0x3f
  40066b:	48 01 c6             	add    rsi,rax
  40066e:	48 d1 fe             	sar    rsi,1
  400671:	74 15                	je     400688 <register_tm_clones+0x38>
  400673:	b8 00 00 00 00       	mov    eax,0x0
  400678:	48 85 c0             	test   rax,rax
  40067b:	74 0b                	je     400688 <register_tm_clones+0x38>
  40067d:	5d                   	pop    rbp
  40067e:	bf 60 10 60 00       	mov    edi,0x601060
  400683:	ff e0                	jmp    rax
  400685:	0f 1f 00             	nop    DWORD PTR [rax]
  400688:	5d                   	pop    rbp
  400689:	c3                   	ret    
  40068a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400690 <__do_global_dtors_aux>:
  400690:	80 3d c9 09 20 00 00 	cmp    BYTE PTR [rip+0x2009c9],0x0        # 601060 <__TMC_END__>
  400697:	75 11                	jne    4006aa <__do_global_dtors_aux+0x1a>
  400699:	55                   	push   rbp
  40069a:	48 89 e5             	mov    rbp,rsp
  40069d:	e8 6e ff ff ff       	call   400610 <deregister_tm_clones>
  4006a2:	5d                   	pop    rbp
  4006a3:	c6 05 b6 09 20 00 01 	mov    BYTE PTR [rip+0x2009b6],0x1        # 601060 <__TMC_END__>
  4006aa:	f3 c3                	repz ret 
  4006ac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000004006b0 <frame_dummy>:
  4006b0:	bf 20 0e 60 00       	mov    edi,0x600e20
  4006b5:	48 83 3f 00          	cmp    QWORD PTR [rdi],0x0
  4006b9:	75 05                	jne    4006c0 <frame_dummy+0x10>
  4006bb:	eb 93                	jmp    400650 <register_tm_clones>
  4006bd:	0f 1f 00             	nop    DWORD PTR [rax]
  4006c0:	b8 00 00 00 00       	mov    eax,0x0
  4006c5:	48 85 c0             	test   rax,rax
  4006c8:	74 f1                	je     4006bb <frame_dummy+0xb>
  4006ca:	55                   	push   rbp
  4006cb:	48 89 e5             	mov    rbp,rsp
  4006ce:	ff d0                	call   rax
  4006d0:	5d                   	pop    rbp
  4006d1:	e9 7a ff ff ff       	jmp    400650 <register_tm_clones>

00000000004006d6 <binarysearch>:
  4006d6:	55                   	push   rbp
  4006d7:	48 89 e5             	mov    rbp,rsp
  4006da:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  4006de:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
  4006e1:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
  4006e4:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
  4006eb:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
  4006ee:	83 e8 01             	sub    eax,0x1
  4006f1:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
  4006f4:	eb 61                	jmp    400757 <binarysearch+0x81>
  4006f6:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
  4006f9:	2b 45 f4             	sub    eax,DWORD PTR [rbp-0xc]
  4006fc:	89 c2                	mov    edx,eax
  4006fe:	c1 ea 1f             	shr    edx,0x1f
  400701:	01 d0                	add    eax,edx
  400703:	d1 f8                	sar    eax,1
  400705:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
  400708:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  40070b:	48 98                	cdqe   
  40070d:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
  400714:	00 
  400715:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  400719:	48 01 d0             	add    rax,rdx
  40071c:	8b 00                	mov    eax,DWORD PTR [rax]
  40071e:	3b 45 e0             	cmp    eax,DWORD PTR [rbp-0x20]
  400721:	75 05                	jne    400728 <binarysearch+0x52>
  400723:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  400726:	eb 3c                	jmp    400764 <binarysearch+0x8e>
  400728:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  40072b:	48 98                	cdqe   
  40072d:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
  400734:	00 
  400735:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  400739:	48 01 d0             	add    rax,rdx
  40073c:	8b 00                	mov    eax,DWORD PTR [rax]
  40073e:	3b 45 e0             	cmp    eax,DWORD PTR [rbp-0x20]
  400741:	7d 0b                	jge    40074e <binarysearch+0x78>
  400743:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  400746:	83 c0 01             	add    eax,0x1
  400749:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
  40074c:	eb 09                	jmp    400757 <binarysearch+0x81>
  40074e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  400751:	83 e8 01             	sub    eax,0x1
  400754:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
  400757:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
  40075a:	3b 45 f8             	cmp    eax,DWORD PTR [rbp-0x8]
  40075d:	7e 97                	jle    4006f6 <binarysearch+0x20>
  40075f:	b8 ff ff ff ff       	mov    eax,0xffffffff
  400764:	5d                   	pop    rbp
  400765:	c3                   	ret    

0000000000400766 <cmp>:
  400766:	55                   	push   rbp
  400767:	48 89 e5             	mov    rbp,rsp
  40076a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  40076e:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  400772:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  400776:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  40077a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  40077e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  400782:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  400786:	8b 10                	mov    edx,DWORD PTR [rax]
  400788:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40078c:	8b 00                	mov    eax,DWORD PTR [rax]
  40078e:	39 c2                	cmp    edx,eax
  400790:	7c 07                	jl     400799 <cmp+0x33>
  400792:	b8 01 00 00 00       	mov    eax,0x1
  400797:	eb 05                	jmp    40079e <cmp+0x38>
  400799:	b8 ff ff ff ff       	mov    eax,0xffffffff
  40079e:	5d                   	pop    rbp
  40079f:	c3                   	ret    

00000000004007a0 <main>:
  4007a0:	55                   	push   rbp
  4007a1:	48 89 e5             	mov    rbp,rsp
  4007a4:	48 81 ec b0 01 00 00 	sub    rsp,0x1b0
  4007ab:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
  4007b2:	00 00 
  4007b4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  4007b8:	31 c0                	xor    eax,eax
  4007ba:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
  4007c1:	48 89 c6             	mov    rsi,rax
  4007c4:	bf b4 09 40 00       	mov    edi,0x4009b4
  4007c9:	b8 00 00 00 00       	mov    eax,0x0
  4007ce:	e8 ed fd ff ff       	call   4005c0 <__isoc99_scanf@plt>
  4007d3:	8b 85 50 fe ff ff    	mov    eax,DWORD PTR [rbp-0x1b0]
  4007d9:	83 f8 64             	cmp    eax,0x64
  4007dc:	7f dc                	jg     4007ba <main+0x1a>
  4007de:	c7 85 58 fe ff ff 00 	mov    DWORD PTR [rbp-0x1a8],0x0
  4007e5:	00 00 00 
  4007e8:	eb 30                	jmp    40081a <main+0x7a>
  4007ea:	48 8d 85 60 fe ff ff 	lea    rax,[rbp-0x1a0]
  4007f1:	8b 95 58 fe ff ff    	mov    edx,DWORD PTR [rbp-0x1a8]
  4007f7:	48 63 d2             	movsxd rdx,edx
  4007fa:	48 c1 e2 02          	shl    rdx,0x2
  4007fe:	48 01 d0             	add    rax,rdx
  400801:	48 89 c6             	mov    rsi,rax
  400804:	bf b4 09 40 00       	mov    edi,0x4009b4
  400809:	b8 00 00 00 00       	mov    eax,0x0
  40080e:	e8 ad fd ff ff       	call   4005c0 <__isoc99_scanf@plt>
  400813:	83 85 58 fe ff ff 01 	add    DWORD PTR [rbp-0x1a8],0x1
  40081a:	8b 85 50 fe ff ff    	mov    eax,DWORD PTR [rbp-0x1b0]
  400820:	39 85 58 fe ff ff    	cmp    DWORD PTR [rbp-0x1a8],eax
  400826:	7c c2                	jl     4007ea <main+0x4a>
  400828:	8b 85 50 fe ff ff    	mov    eax,DWORD PTR [rbp-0x1b0]
  40082e:	48 63 f0             	movsxd rsi,eax
  400831:	48 8d 85 60 fe ff ff 	lea    rax,[rbp-0x1a0]
  400838:	b9 66 07 40 00       	mov    ecx,0x400766
  40083d:	ba 04 00 00 00       	mov    edx,0x4
  400842:	48 89 c7             	mov    rdi,rax
  400845:	e8 36 fd ff ff       	call   400580 <qsort@plt>
  40084a:	c7 85 58 fe ff ff 00 	mov    DWORD PTR [rbp-0x1a8],0x0
  400851:	00 00 00 
  400854:	eb 27                	jmp    40087d <main+0xdd>
  400856:	8b 85 58 fe ff ff    	mov    eax,DWORD PTR [rbp-0x1a8]
  40085c:	48 98                	cdqe   
  40085e:	8b 84 85 60 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x1a0]
  400865:	89 c6                	mov    esi,eax
  400867:	bf b7 09 40 00       	mov    edi,0x4009b7
  40086c:	b8 00 00 00 00       	mov    eax,0x0
  400871:	e8 2a fd ff ff       	call   4005a0 <printf@plt>
  400876:	83 85 58 fe ff ff 01 	add    DWORD PTR [rbp-0x1a8],0x1
  40087d:	8b 85 50 fe ff ff    	mov    eax,DWORD PTR [rbp-0x1b0]
  400883:	39 85 58 fe ff ff    	cmp    DWORD PTR [rbp-0x1a8],eax
  400889:	7c cb                	jl     400856 <main+0xb6>
  40088b:	bf 0a 00 00 00       	mov    edi,0xa
  400890:	e8 cb fc ff ff       	call   400560 <putchar@plt>
  400895:	48 8d 85 54 fe ff ff 	lea    rax,[rbp-0x1ac]
  40089c:	48 89 c6             	mov    rsi,rax
  40089f:	bf b4 09 40 00       	mov    edi,0x4009b4
  4008a4:	b8 00 00 00 00       	mov    eax,0x0
  4008a9:	e8 12 fd ff ff       	call   4005c0 <__isoc99_scanf@plt>
  4008ae:	8b 95 54 fe ff ff    	mov    edx,DWORD PTR [rbp-0x1ac]
  4008b4:	8b 8d 50 fe ff ff    	mov    ecx,DWORD PTR [rbp-0x1b0]
  4008ba:	48 8d 85 60 fe ff ff 	lea    rax,[rbp-0x1a0]
  4008c1:	89 ce                	mov    esi,ecx
  4008c3:	48 89 c7             	mov    rdi,rax
  4008c6:	e8 0b fe ff ff       	call   4006d6 <binarysearch>
  4008cb:	89 85 5c fe ff ff    	mov    DWORD PTR [rbp-0x1a4],eax
  4008d1:	83 bd 5c fe ff ff ff 	cmp    DWORD PTR [rbp-0x1a4],0xffffffff
  4008d8:	74 28                	je     400902 <main+0x162>
  4008da:	8b 85 5c fe ff ff    	mov    eax,DWORD PTR [rbp-0x1a4]
  4008e0:	48 98                	cdqe   
  4008e2:	8b 94 85 60 fe ff ff 	mov    edx,DWORD PTR [rbp+rax*4-0x1a0]
  4008e9:	8b 85 5c fe ff ff    	mov    eax,DWORD PTR [rbp-0x1a4]
  4008ef:	89 c6                	mov    esi,eax
  4008f1:	bf bb 09 40 00       	mov    edi,0x4009bb
  4008f6:	b8 00 00 00 00       	mov    eax,0x0
  4008fb:	e8 a0 fc ff ff       	call   4005a0 <printf@plt>
  400900:	eb 0a                	jmp    40090c <main+0x16c>
  400902:	bf c2 09 40 00       	mov    edi,0x4009c2
  400907:	e8 64 fc ff ff       	call   400570 <puts@plt>
  40090c:	b8 00 00 00 00       	mov    eax,0x0
  400911:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
  400915:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
  40091c:	00 00 
  40091e:	74 05                	je     400925 <main+0x185>
  400920:	e8 6b fc ff ff       	call   400590 <__stack_chk_fail@plt>
  400925:	c9                   	leave  
  400926:	c3                   	ret    
  400927:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  40092e:	00 00 

0000000000400930 <__libc_csu_init>:
  400930:	41 57                	push   r15
  400932:	41 56                	push   r14
  400934:	41 89 ff             	mov    r15d,edi
  400937:	41 55                	push   r13
  400939:	41 54                	push   r12
  40093b:	4c 8d 25 ce 04 20 00 	lea    r12,[rip+0x2004ce]        # 600e10 <__frame_dummy_init_array_entry>
  400942:	55                   	push   rbp
  400943:	48 8d 2d ce 04 20 00 	lea    rbp,[rip+0x2004ce]        # 600e18 <__init_array_end>
  40094a:	53                   	push   rbx
  40094b:	49 89 f6             	mov    r14,rsi
  40094e:	49 89 d5             	mov    r13,rdx
  400951:	4c 29 e5             	sub    rbp,r12
  400954:	48 83 ec 08          	sub    rsp,0x8
  400958:	48 c1 fd 03          	sar    rbp,0x3
  40095c:	e8 c7 fb ff ff       	call   400528 <_init>
  400961:	48 85 ed             	test   rbp,rbp
  400964:	74 20                	je     400986 <__libc_csu_init+0x56>
  400966:	31 db                	xor    ebx,ebx
  400968:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  40096f:	00 
  400970:	4c 89 ea             	mov    rdx,r13
  400973:	4c 89 f6             	mov    rsi,r14
  400976:	44 89 ff             	mov    edi,r15d
  400979:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
  40097d:	48 83 c3 01          	add    rbx,0x1
  400981:	48 39 eb             	cmp    rbx,rbp
  400984:	75 ea                	jne    400970 <__libc_csu_init+0x40>
  400986:	48 83 c4 08          	add    rsp,0x8
  40098a:	5b                   	pop    rbx
  40098b:	5d                   	pop    rbp
  40098c:	41 5c                	pop    r12
  40098e:	41 5d                	pop    r13
  400990:	41 5e                	pop    r14
  400992:	41 5f                	pop    r15
  400994:	c3                   	ret    
  400995:	90                   	nop
  400996:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  40099d:	00 00 00 

00000000004009a0 <__libc_csu_fini>:
  4009a0:	f3 c3                	repz ret 

Disassembly of section .fini:

00000000004009a4 <_fini>:
  4009a4:	48 83 ec 08          	sub    rsp,0x8
  4009a8:	48 83 c4 08          	add    rsp,0x8
  4009ac:	c3                   	ret    

Disassembly of section .rodata:

00000000004009b0 <_IO_stdin_used>:
  4009b0:	01 00                	add    DWORD PTR [rax],eax
  4009b2:	02 00                	add    al,BYTE PTR [rax]
  4009b4:	25 64 00 25 64       	and    eax,0x64250064
  4009b9:	20 00                	and    BYTE PTR [rax],al
  4009bb:	25 64 2c 25 64       	and    eax,0x64252c64
  4009c0:	0a 00                	or     al,BYTE PTR [rax]
  4009c2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4009c3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4009c4:	74 20                	je     4009e6 <__GNU_EH_FRAME_HDR+0x1a>
  4009c6:	66 6f                	outs   dx,WORD PTR ds:[rsi]
  4009c8:	75 6e                	jne    400a38 <__GNU_EH_FRAME_HDR+0x6c>
  4009ca:	64                   	fs
	...

Disassembly of section .eh_frame_hdr:

00000000004009cc <__GNU_EH_FRAME_HDR>:
  4009cc:	01 1b                	add    DWORD PTR [rbx],ebx
  4009ce:	03 3b                	add    edi,DWORD PTR [rbx]
  4009d0:	40 00 00             	add    BYTE PTR [rax],al
  4009d3:	00 07                	add    BYTE PTR [rdi],al
  4009d5:	00 00                	add    BYTE PTR [rax],al
  4009d7:	00 84 fb ff ff 8c 00 	add    BYTE PTR [rbx+rdi*8+0x8cffff],al
  4009de:	00 00                	add    BYTE PTR [rax],al
  4009e0:	14 fc                	adc    al,0xfc
  4009e2:	ff                   	(bad)  
  4009e3:	ff 5c 00 00          	call   FWORD PTR [rax+rax*1+0x0]
  4009e7:	00 0a                	add    BYTE PTR [rdx],cl
  4009e9:	fd                   	std    
  4009ea:	ff                   	(bad)  
  4009eb:	ff b4 00 00 00 9a fd 	push   QWORD PTR [rax+rax*1-0x2660000]
  4009f2:	ff                   	(bad)  
  4009f3:	ff d4                	call   rsp
  4009f5:	00 00                	add    BYTE PTR [rax],al
  4009f7:	00 d4                	add    ah,dl
  4009f9:	fd                   	std    
  4009fa:	ff                   	(bad)  
  4009fb:	ff f4                	push   rsp
  4009fd:	00 00                	add    BYTE PTR [rax],al
  4009ff:	00 64 ff ff          	add    BYTE PTR [rdi+rdi*8-0x1],ah
  400a03:	ff 14 01             	call   QWORD PTR [rcx+rax*1]
  400a06:	00 00                	add    BYTE PTR [rax],al
  400a08:	d4                   	(bad)  
  400a09:	ff                   	(bad)  
  400a0a:	ff                   	(bad)  
  400a0b:	ff 5c 01 00          	call   FWORD PTR [rcx+rax*1+0x0]
	...

Disassembly of section .eh_frame:

0000000000400a10 <__FRAME_END__-0x130>:
  400a10:	14 00                	adc    al,0x0
  400a12:	00 00                	add    BYTE PTR [rax],al
  400a14:	00 00                	add    BYTE PTR [rax],al
  400a16:	00 00                	add    BYTE PTR [rax],al
  400a18:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  400a1b:	00 01                	add    BYTE PTR [rcx],al
  400a1d:	78 10                	js     400a2f <__GNU_EH_FRAME_HDR+0x63>
  400a1f:	01 1b                	add    DWORD PTR [rbx],ebx
  400a21:	0c 07                	or     al,0x7
  400a23:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
  400a29:	00 00                	add    BYTE PTR [rax],al
  400a2b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400a2e:	00 00                	add    BYTE PTR [rax],al
  400a30:	b0 fb                	mov    al,0xfb
  400a32:	ff                   	(bad)  
  400a33:	ff 2a                	jmp    FWORD PTR [rdx]
	...
  400a3d:	00 00                	add    BYTE PTR [rax],al
  400a3f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  400a42:	00 00                	add    BYTE PTR [rax],al
  400a44:	00 00                	add    BYTE PTR [rax],al
  400a46:	00 00                	add    BYTE PTR [rax],al
  400a48:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  400a4b:	00 01                	add    BYTE PTR [rcx],al
  400a4d:	78 10                	js     400a5f <__GNU_EH_FRAME_HDR+0x93>
  400a4f:	01 1b                	add    DWORD PTR [rbx],ebx
  400a51:	0c 07                	or     al,0x7
  400a53:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
  400a59:	00 00                	add    BYTE PTR [rax],al
  400a5b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400a5e:	00 00                	add    BYTE PTR [rax],al
  400a60:	f0 fa                	lock cli 
  400a62:	ff                   	(bad)  
  400a63:	ff 80 00 00 00 00    	inc    DWORD PTR [rax+0x0]
  400a69:	0e                   	(bad)  
  400a6a:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
  400a6d:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
  400a70:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
  400a73:	80 00 3f             	add    BYTE PTR [rax],0x3f
  400a76:	1a 3b                	sbb    bh,BYTE PTR [rbx]
  400a78:	2a 33                	sub    dh,BYTE PTR [rbx]
  400a7a:	24 22                	and    al,0x22
  400a7c:	00 00                	add    BYTE PTR [rax],al
  400a7e:	00 00                	add    BYTE PTR [rax],al
  400a80:	1c 00                	sbb    al,0x0
  400a82:	00 00                	add    BYTE PTR [rax],al
  400a84:	44 00 00             	add    BYTE PTR [rax],r8b
  400a87:	00 4e fc             	add    BYTE PTR [rsi-0x4],cl
  400a8a:	ff                   	(bad)  
  400a8b:	ff 90 00 00 00 00    	call   QWORD PTR [rax+0x0]
  400a91:	41 0e                	rex.B (bad) 
  400a93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400a99:	02 8b 0c 07 08 00    	add    cl,BYTE PTR [rbx+0x8070c]
  400a9f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400aa2:	00 00                	add    BYTE PTR [rax],al
  400aa4:	64 00 00             	add    BYTE PTR fs:[rax],al
  400aa7:	00 be fc ff ff 3a    	add    BYTE PTR [rsi+0x3afffffc],bh
  400aad:	00 00                	add    BYTE PTR [rax],al
  400aaf:	00 00                	add    BYTE PTR [rax],al
  400ab1:	41 0e                	rex.B (bad) 
  400ab3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400ab9:	75 0c                	jne    400ac7 <__GNU_EH_FRAME_HDR+0xfb>
  400abb:	07                   	(bad)  
  400abc:	08 00                	or     BYTE PTR [rax],al
  400abe:	00 00                	add    BYTE PTR [rax],al
  400ac0:	1c 00                	sbb    al,0x0
  400ac2:	00 00                	add    BYTE PTR [rax],al
  400ac4:	84 00                	test   BYTE PTR [rax],al
  400ac6:	00 00                	add    BYTE PTR [rax],al
  400ac8:	d8 fc                	fdivr  st,st(4)
  400aca:	ff                   	(bad)  
  400acb:	ff 87 01 00 00 00    	inc    DWORD PTR [rdi+0x1]
  400ad1:	41 0e                	rex.B (bad) 
  400ad3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400ad9:	03 82 01 0c 07 08    	add    eax,DWORD PTR [rdx+0x8070c01]
  400adf:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
  400ae3:	00 a4 00 00 00 48 fe 	add    BYTE PTR [rax+rax*1-0x1b80000],ah
  400aea:	ff                   	(bad)  
  400aeb:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
  400aee:	00 00                	add    BYTE PTR [rax],al
  400af0:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
  400af3:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
  400af9:	8e 03                	mov    es,WORD PTR [rbx]
  400afb:	45 0e                	rex.RB (bad) 
  400afd:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
  400b03:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86701951 <_end+0xffffffff861008e9>
  400b09:	06                   	(bad)  
  400b0a:	48 0e                	rex.W (bad) 
  400b0c:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
  400b12:	72 0e                	jb     400b22 <__GNU_EH_FRAME_HDR+0x156>
  400b14:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
  400b17:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  400b1a:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  400b1d:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  400b20:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  400b23:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  400b26:	08 00                	or     BYTE PTR [rax],al
  400b28:	14 00                	adc    al,0x0
  400b2a:	00 00                	add    BYTE PTR [rax],al
  400b2c:	ec                   	in     al,dx
  400b2d:	00 00                	add    BYTE PTR [rax],al
  400b2f:	00 70 fe             	add    BYTE PTR [rax-0x2],dh
  400b32:	ff                   	(bad)  
  400b33:	ff 02                	inc    DWORD PTR [rdx]
	...

0000000000400b40 <__FRAME_END__>:
  400b40:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	b0 06                	mov    al,0x6
  600e12:	40 00 00             	add    BYTE PTR [rax],al
  600e15:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	90                   	nop
  600e19:	06                   	(bad)  
  600e1a:	40 00 00             	add    BYTE PTR [rax],al
  600e1d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .jcr:

0000000000600e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e28 <_DYNAMIC>:
  600e28:	01 00                	add    DWORD PTR [rax],eax
  600e2a:	00 00                	add    BYTE PTR [rax],al
  600e2c:	00 00                	add    BYTE PTR [rax],al
  600e2e:	00 00                	add    BYTE PTR [rax],al
  600e30:	01 00                	add    DWORD PTR [rax],eax
  600e32:	00 00                	add    BYTE PTR [rax],al
  600e34:	00 00                	add    BYTE PTR [rax],al
  600e36:	00 00                	add    BYTE PTR [rax],al
  600e38:	0c 00                	or     al,0x0
  600e3a:	00 00                	add    BYTE PTR [rax],al
  600e3c:	00 00                	add    BYTE PTR [rax],al
  600e3e:	00 00                	add    BYTE PTR [rax],al
  600e40:	28 05 40 00 00 00    	sub    BYTE PTR [rip+0x40],al        # 600e86 <_DYNAMIC+0x5e>
  600e46:	00 00                	add    BYTE PTR [rax],al
  600e48:	0d 00 00 00 00       	or     eax,0x0
  600e4d:	00 00                	add    BYTE PTR [rax],al
  600e4f:	00 a4 09 40 00 00 00 	add    BYTE PTR [rcx+rcx*1+0x40],ah
  600e56:	00 00                	add    BYTE PTR [rax],al
  600e58:	19 00                	sbb    DWORD PTR [rax],eax
  600e5a:	00 00                	add    BYTE PTR [rax],al
  600e5c:	00 00                	add    BYTE PTR [rax],al
  600e5e:	00 00                	add    BYTE PTR [rax],al
  600e60:	10 0e                	adc    BYTE PTR [rsi],cl
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    BYTE PTR [rax],al
  600e65:	00 00                	add    BYTE PTR [rax],al
  600e67:	00 1b                	add    BYTE PTR [rbx],bl
  600e69:	00 00                	add    BYTE PTR [rax],al
  600e6b:	00 00                	add    BYTE PTR [rax],al
  600e6d:	00 00                	add    BYTE PTR [rax],al
  600e6f:	00 08                	add    BYTE PTR [rax],cl
  600e71:	00 00                	add    BYTE PTR [rax],al
  600e73:	00 00                	add    BYTE PTR [rax],al
  600e75:	00 00                	add    BYTE PTR [rax],al
  600e77:	00 1a                	add    BYTE PTR [rdx],bl
  600e79:	00 00                	add    BYTE PTR [rax],al
  600e7b:	00 00                	add    BYTE PTR [rax],al
  600e7d:	00 00                	add    BYTE PTR [rax],al
  600e7f:	00 18                	add    BYTE PTR [rax],bl
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    BYTE PTR [rax],al
  600e85:	00 00                	add    BYTE PTR [rax],al
  600e87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  600e8a:	00 00                	add    BYTE PTR [rax],al
  600e8c:	00 00                	add    BYTE PTR [rax],al
  600e8e:	00 00                	add    BYTE PTR [rax],al
  600e90:	08 00                	or     BYTE PTR [rax],al
  600e92:	00 00                	add    BYTE PTR [rax],al
  600e94:	00 00                	add    BYTE PTR [rax],al
  600e96:	00 00                	add    BYTE PTR [rax],al
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600e9d:	00 00                	add    BYTE PTR [rax],al
  600e9f:	00 98 02 40 00 00    	add    BYTE PTR [rax+0x4002],bl
  600ea5:	00 00                	add    BYTE PTR [rax],al
  600ea7:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 600ead <_DYNAMIC+0x85>
  600ead:	00 00                	add    BYTE PTR [rax],al
  600eaf:	00 90 03 40 00 00    	add    BYTE PTR [rax+0x4003],dl
  600eb5:	00 00                	add    BYTE PTR [rax],al
  600eb7:	00 06                	add    BYTE PTR [rsi],al
  600eb9:	00 00                	add    BYTE PTR [rax],al
  600ebb:	00 00                	add    BYTE PTR [rax],al
  600ebd:	00 00                	add    BYTE PTR [rax],al
  600ebf:	00 b8 02 40 00 00    	add    BYTE PTR [rax+0x4002],bh
  600ec5:	00 00                	add    BYTE PTR [rax],al
  600ec7:	00 0a                	add    BYTE PTR [rdx],cl
  600ec9:	00 00                	add    BYTE PTR [rax],al
  600ecb:	00 00                	add    BYTE PTR [rax],al
  600ecd:	00 00                	add    BYTE PTR [rax],al
  600ecf:	00 86 00 00 00 00    	add    BYTE PTR [rsi+0x0],al
  600ed5:	00 00                	add    BYTE PTR [rax],al
  600ed7:	00 0b                	add    BYTE PTR [rbx],cl
  600ed9:	00 00                	add    BYTE PTR [rax],al
  600edb:	00 00                	add    BYTE PTR [rax],al
  600edd:	00 00                	add    BYTE PTR [rax],al
  600edf:	00 18                	add    BYTE PTR [rax],bl
  600ee1:	00 00                	add    BYTE PTR [rax],al
  600ee3:	00 00                	add    BYTE PTR [rax],al
  600ee5:	00 00                	add    BYTE PTR [rax],al
  600ee7:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 600eed <_DYNAMIC+0xc5>
	...
  600ef5:	00 00                	add    BYTE PTR [rax],al
  600ef7:	00 03                	add    BYTE PTR [rbx],al
	...
  600f01:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  600f04:	00 00                	add    BYTE PTR [rax],al
  600f06:	00 00                	add    BYTE PTR [rax],al
  600f08:	02 00                	add    al,BYTE PTR [rax]
  600f0a:	00 00                	add    BYTE PTR [rax],al
  600f0c:	00 00                	add    BYTE PTR [rax],al
  600f0e:	00 00                	add    BYTE PTR [rax],al
  600f10:	a8 00                	test   al,0x0
  600f12:	00 00                	add    BYTE PTR [rax],al
  600f14:	00 00                	add    BYTE PTR [rax],al
  600f16:	00 00                	add    BYTE PTR [rax],al
  600f18:	14 00                	adc    al,0x0
  600f1a:	00 00                	add    BYTE PTR [rax],al
  600f1c:	00 00                	add    BYTE PTR [rax],al
  600f1e:	00 00                	add    BYTE PTR [rax],al
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    BYTE PTR [rax],al
  600f23:	00 00                	add    BYTE PTR [rax],al
  600f25:	00 00                	add    BYTE PTR [rax],al
  600f27:	00 17                	add    BYTE PTR [rdi],dl
  600f29:	00 00                	add    BYTE PTR [rax],al
  600f2b:	00 00                	add    BYTE PTR [rax],al
  600f2d:	00 00                	add    BYTE PTR [rax],al
  600f2f:	00 80 04 40 00 00    	add    BYTE PTR [rax+0x4004],al
  600f35:	00 00                	add    BYTE PTR [rax],al
  600f37:	00 07                	add    BYTE PTR [rdi],al
  600f39:	00 00                	add    BYTE PTR [rax],al
  600f3b:	00 00                	add    BYTE PTR [rax],al
  600f3d:	00 00                	add    BYTE PTR [rax],al
  600f3f:	00 68 04             	add    BYTE PTR [rax+0x4],ch
  600f42:	40 00 00             	add    BYTE PTR [rax],al
  600f45:	00 00                	add    BYTE PTR [rax],al
  600f47:	00 08                	add    BYTE PTR [rax],cl
  600f49:	00 00                	add    BYTE PTR [rax],al
  600f4b:	00 00                	add    BYTE PTR [rax],al
  600f4d:	00 00                	add    BYTE PTR [rax],al
  600f4f:	00 18                	add    BYTE PTR [rax],bl
  600f51:	00 00                	add    BYTE PTR [rax],al
  600f53:	00 00                	add    BYTE PTR [rax],al
  600f55:	00 00                	add    BYTE PTR [rax],al
  600f57:	00 09                	add    BYTE PTR [rcx],cl
  600f59:	00 00                	add    BYTE PTR [rax],al
  600f5b:	00 00                	add    BYTE PTR [rax],al
  600f5d:	00 00                	add    BYTE PTR [rax],al
  600f5f:	00 18                	add    BYTE PTR [rax],bl
  600f61:	00 00                	add    BYTE PTR [rax],al
  600f63:	00 00                	add    BYTE PTR [rax],al
  600f65:	00 00                	add    BYTE PTR [rax],al
  600f67:	00 fe                	add    dh,bh
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f6d:	00 00                	add    BYTE PTR [rax],al
  600f6f:	00 28                	add    BYTE PTR [rax],ch
  600f71:	04 40                	add    al,0x40
  600f73:	00 00                	add    BYTE PTR [rax],al
  600f75:	00 00                	add    BYTE PTR [rax],al
  600f77:	00 ff                	add    bh,bh
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f7d:	00 00                	add    BYTE PTR [rax],al
  600f7f:	00 01                	add    BYTE PTR [rcx],al
  600f81:	00 00                	add    BYTE PTR [rax],al
  600f83:	00 00                	add    BYTE PTR [rax],al
  600f85:	00 00                	add    BYTE PTR [rax],al
  600f87:	00 f0                	add    al,dh
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f8d:	00 00                	add    BYTE PTR [rax],al
  600f8f:	00 16                	add    BYTE PTR [rsi],dl
  600f91:	04 40                	add    al,0x40
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	28 0e                	sub    BYTE PTR [rsi],cl
  601002:	60                   	(bad)  
	...
  601017:	00 66 05             	add    BYTE PTR [rsi+0x5],ah
  60101a:	40 00 00             	add    BYTE PTR [rax],al
  60101d:	00 00                	add    BYTE PTR [rax],al
  60101f:	00 76 05             	add    BYTE PTR [rsi+0x5],dh
  601022:	40 00 00             	add    BYTE PTR [rax],al
  601025:	00 00                	add    BYTE PTR [rax],al
  601027:	00 86 05 40 00 00    	add    BYTE PTR [rsi+0x4005],al
  60102d:	00 00                	add    BYTE PTR [rax],al
  60102f:	00 96 05 40 00 00    	add    BYTE PTR [rsi+0x4005],dl
  601035:	00 00                	add    BYTE PTR [rax],al
  601037:	00 a6 05 40 00 00    	add    BYTE PTR [rsi+0x4005],ah
  60103d:	00 00                	add    BYTE PTR [rax],al
  60103f:	00 b6 05 40 00 00    	add    BYTE PTR [rsi+0x4005],dh
  601045:	00 00                	add    BYTE PTR [rax],al
  601047:	00 c6                	add    dh,al
  601049:	05 40 00 00 00       	add    eax,0x40
	...

Disassembly of section .data:

0000000000601050 <__data_start>:
	...

0000000000601058 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601060 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x4004b0>
   a:	74 75                	je     81 <_init-0x4004a7>
   c:	20 35 2e 34 2e 30    	and    BYTE PTR [rip+0x302e342e],dh        # 302e3440 <_end+0x2fce23d8>
  12:	2d 36 75 62 75       	sub    eax,0x75627536
  17:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  18:	74 75                	je     8f <_init-0x400499>
  1a:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1d:	36 2e 30 34 2e       	ss xor BYTE PTR cs:[rsi+rbp*1],dh
  22:	31 30                	xor    DWORD PTR [rax],esi
  24:	29 20                	sub    DWORD PTR [rax],esp
  26:	35 2e 34 2e 30       	xor    eax,0x302e342e
  2b:	20 32                	and    BYTE PTR [rdx],dh
  2d:	30 31                	xor    BYTE PTR [rcx],dh
  2f:	36 30 36             	xor    BYTE PTR ss:[rsi],dh
  32:	30 39                	xor    BYTE PTR [rcx],bh
	...
